// Generated by CoffeeScript 1.6.1
(function() {
  var Palette;

  window.Palette = Palette = (function() {
    var monochrome_color, palette_size;

    palette_size = 14;

    monochrome_color = 0;

    Palette.prototype.color = function(transaction) {
      if (this.method === 'monochrome') {
        return monochrome_color;
      } else {
        return this.transaction_colors[transaction.id] % palette_size;
      }
    };

    function Palette(capture, method) {
      var color, content_colors, content_type, domain_colors, next_color, stream, transaction, _i, _j, _k, _l, _len, _len1, _len2, _len3, _name, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;
      this.method = method;
      this.transaction_colors = {};
      next_color = 0;
      switch (this.method) {
        case 'stream':
          _ref = capture.transactions;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            transaction = _ref[_i];
            this.transaction_colors[transaction.id] = next_color++;
          }
          break;
        case 'domain':
          domain_colors = {};
          _ref1 = capture.streams;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            stream = _ref1[_j];
            if ((_ref2 = domain_colors[_name = stream.domain]) == null) {
              domain_colors[_name] = next_color++;
            }
            color = domain_colors[stream.domain];
            _ref3 = stream.transactions;
            for (_k = 0, _len2 = _ref3.length; _k < _len2; _k++) {
              transaction = _ref3[_k];
              this.transaction_colors[transaction.id] = color;
            }
          }
          break;
        case 'content-type':
          content_colors = {};
          _ref4 = capture.transactions;
          for (_l = 0, _len3 = _ref4.length; _l < _len3; _l++) {
            transaction = _ref4[_l];
            content_type = (_ref5 = transaction.response) != null ? _ref5.headers['content-type'] : void 0;
            if (content_type != null ? content_type.match(/javascript/) : void 0) {
              content_type = 'javascript';
            }
            if (content_type != null ? content_type.match(/image/) : void 0) {
              content_type = 'image';
            }
            if (content_type != null ? content_type.match(/html/) : void 0) {
              content_type = 'html';
            }
            if ((_ref6 = content_colors[content_type]) == null) {
              content_colors[content_type] = next_color++;
            }
            color = content_colors[content_type];
            this.transaction_colors[transaction.id] = color;
          }
      }
    }

    return Palette;

  })();

}).call(this);
